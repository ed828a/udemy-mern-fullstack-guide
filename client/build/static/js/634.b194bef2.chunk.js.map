{"version":3,"file":"static/js/634.b194bef2.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.jsx","places/components/PlaceItem.jsx","places/components/PlaceList.jsx","places/pages/UserPlaces.jsx"],"sourcesContent":["import \"./Map.css\";\r\nimport React, { /* useState, */ useEffect, useRef } from \"react\";\r\n\r\nimport mapboxgl from \"mapbox-gl\";\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_PUBLIC_ACCESS_TOKEN;\r\n\r\nconst Map = (props) => {\r\n    const mapContainer = useRef(null); //The mapContainer ref specifies that App should be drawn to the HTML page in a new <div> element.\r\n    const mapRef = useRef(null); //The ref will prevent the map from reloading when the user interacts with the map.\r\n    // const [lng, setLng] = useState(138.59995);\r\n    // const [lat, setLat] = useState(-34.928657);\r\n    // const [zoom, setZoom] = useState(12);\r\n\r\n    const { center, zoom } = props;\r\n    // console.log(\"center: \", center);\r\n\r\n    const { lat, lng } = center;\r\n    console.log(\"lat, lng, zoom\", lat, lng, zoom);\r\n\r\n    useEffect(() => {\r\n        if (mapRef.current) return; // initialize map only once\r\n        mapRef.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: \"mapbox://styles/mapbox/streets-v11?optimize=true\",\r\n            center: [lng, lat],\r\n            zoom: zoom,\r\n        });\r\n\r\n        new mapboxgl.Marker({ color: \"#18fa1f\", rotation: 45, scale: 0.7 })\r\n            .setLngLat([lng, lat])\r\n            .addTo(mapRef.current);\r\n    }, [lat, lng, zoom]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div\r\n                ref={mapContainer}\r\n                className={`map ${props.className}`}\r\n                style={props.style}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import \"./PlaceItem.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst PlaceItem = (props) => {\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const navigate = useNavigate();\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n    const closeMapHandler = () => setShowMap(false);\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        console.log(\"Deleting...\");\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n                \"DELETE\",\r\n                null,\r\n                {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n            props.onDelete();\r\n            navigate(`/${auth.userId}/places`, { push: true });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={closeMapHandler}\r\n                header={props.address}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <Button\r\n                        style={{ marginTop: \"1rem\" }}\r\n                        onClick={closeMapHandler}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                }\r\n                style={{ top: \"10vh\" }}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.coordinates} zoom={16} />\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteHandler}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>\r\n                            Delete\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p style={{ padding: \"1rem\" }}>\r\n                    Do you want to process and delete this place? Please note\r\n                    that it can't be undone thereafter.\r\n                </p>\r\n            </Modal>\r\n            <li className=\"place-item\">\r\n                <Card\r\n                    className=\"place-item__content\"\r\n                    style={{ background: \"white\" }}\r\n                >\r\n                    {isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className=\"place-item__image\">\r\n                        <img\r\n                            src={`${process.env.REACT_APP_ASSETS_URL}/${props.image}`}\r\n                            alt={props.title}\r\n                        />\r\n                    </div>\r\n                    <div className=\"place-item__info\">\r\n                        <h2>{props.title}</h2>\r\n                        <h3>{props.address}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"place-item__actions\">\r\n                        <Button inverse onClick={openMapHandler}>\r\n                            View On Map\r\n                        </Button>\r\n                        {auth.isLoggedIn && auth.userId === props.creatorId && (\r\n                            <>\r\n                                <Button to={`/places/${props.id}`}>Edit</Button>\r\n                                <Button\r\n                                    danger\r\n                                    onClick={showDeleteWarningHandler}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import \"./PlaceList.css\";\r\nimport React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nconst PlaceList = (props) => {\r\n    console.log(\"PlaceList props: \", props);\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card style={{ background: \"white\", padding: \"1rem\" }}>\r\n                    <h2>No Places Found. Maybe Create One?</h2>\r\n                    <Button to=\"/places/new\">Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map((place) => {\r\n                console.log(\"place\", place);\r\n                return (\r\n                    <PlaceItem\r\n                        key={place.id}\r\n                        id={place.id}\r\n                        image={place.image}\r\n                        title={place.title}\r\n                        description={place.description}\r\n                        address={place.address}\r\n                        creatorId={place.creator}\r\n                        coordinates={place.location}\r\n                        onDelete={() => props.onDeletePlace(place.id)}\r\n                    />\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nconst UserPlaces = () => {\r\n    const userId = useParams().userId;\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchPlacesByUserId = async (uid) => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n                );\r\n                setLoadedPlaces(responseData.places);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchPlacesByUserId(userId);\r\n    }, [sendRequest, userId]);\r\n\r\n    const deletePlaceHandler = (pid) =>\r\n        setLoadedPlaces((prevPlaces) =>\r\n            prevPlaces.filter((place) => place.id !== pid)\r\n        );\r\n\r\n    const regex = /Could not find a place for the provided user id/gm;\r\n    console.log(!regex.test(error));\r\n    return (\r\n        <React.Fragment>\r\n            {regex.test(error) ? (\r\n                <PlaceList\r\n                    items={loadedPlaces}\r\n                    onDeletePlace={deletePlaceHandler}\r\n                />\r\n            ) : (\r\n                <ErrorModal error={error} onClear={clearError} />\r\n            )}\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedPlaces.length > 0 && (\r\n                <PlaceList\r\n                    items={loadedPlaces}\r\n                    onDeletePlace={deletePlaceHandler}\r\n                />\r\n            )}\r\n            ;\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"names":["mapboxgl","process","props","mapContainer","useRef","mapRef","center","zoom","lat","lng","console","log","useEffect","current","container","style","color","rotation","scale","setLngLat","addTo","className","ref","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","navigate","useNavigate","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","id","Authorization","token","onDelete","userId","push","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","marginTop","onClick","top","coordinates","inverse","danger","padding","Card","background","LoadingSpinner","asOverlay","src","image","alt","title","description","isLoggedIn","creatorId","to","items","length","map","place","creator","location","onDeletePlace","useParams","loadedPlaces","setLoadedPlaces","fetchPlacesByUserId","uid","responseData","places","deletePlaceHandler","pid","prevPlaces","filter","regex","test"],"sourceRoot":""}